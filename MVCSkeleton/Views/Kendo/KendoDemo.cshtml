@model MVCSkeleton.Models.KendoModel
@using MVCSkeleton.Controls
@{
    ViewBag.Title = "KendoDemo";
}

<h2>Kendo Demos</h2>
<br/>
<div id="shipping">    
    @using (Html.BeginForm("Submit", "Kendo", FormMethod.Post))
    {
        <label for="Countries">Choose shipping countries :</label>
        @(Html.Controls()
            .AutoComplete()
            .Name("Countries")
            .Filter("startswith")
            .Placeholder("Select countries...")
            .BindTo(Model.Countries)
            .Separator(", "))
        <br/>
        <label for="TShirt">Choose T-shirt fabric :</label>
        @(Html.Controls().ComboBox()
          .Name("TShirtFabric")
          .Filter("contains")
          .Placeholder("Select T-shirt fabric...")
          .DataTextField("Text")
          .DataValueField("Value")
          .BindTo(Model.Fabrics.Select(x => new SelectListItem{ Text = x, Value = Model.Fabrics.IndexOf(x).ToString()}))
          .SelectedIndex(3)
          .Suggest(true))
        <br/>
        <label for="DateTimePicker">Choose Date Time :</label>
        @(Html.Controls().DateTimePicker()
            .Name("DateTimePicker")
            .Value(DateTime.Now))
        <br/>
        <label for="Categories">Choose Category :</label>
        @(Html.Controls().DropDownList()
            .BindTo(Model.Categories)
            .Name("Categories")
            .OptionLabel("Select category...")
            .DataTextField("Name")
            .DataValueField("Id"))
        <br/>
        <input type="submit" value="Submit" onclick="//alert($('#Countries').data('kendoAutoComplete').value());"/>
        <br/>
        <br/>
        @(Html.Controls().Grid(Model.Products)    
              .Name("Grid")
              .Columns(columns =>
                  {
                      columns.Bound(p => p.ProductName);
                      columns.Bound(p => p.ProductCode);
                      columns.Bound(p => p.UnitPrice);
                      columns.Command(command => { command.Edit(); command.Destroy(); });
                  })
              .ToolBar(toolbar => toolbar.Create())
              .Editable(x => x.Mode(GridEditMode.PopUp))
              .Groupable()
              .Pageable()
              .Sortable()
              .Scrollable()
              .Filterable()
              .DataSource(ds => ds
                  .Ajax()
                  .Read(read => read.Action("Products_Read", "Kendo"))
                  .Model(model => model.Id(p => p.Id))
                  .Create(create => create.Action("Product_Create", "Kendo"))
                  .Destroy(destroy => destroy.Action("Product_Delete", "Kendo"))
                  .Update(update => update.Action("Product_Update", "Kendo"))))        
    }
    <br/>
    
</div>