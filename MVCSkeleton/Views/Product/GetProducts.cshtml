@using MVCSkeleton.Presentation.Controls
@model List<MVCSkeleton.Presentation.Models.ProductModel>

@{
    ViewBag.Title = "Products";
}

<h2>Products</h2>

<label for="ProductsGrid">Products:</label>
    @Html.ValidationSummary()

@(Html.Controls().Grid(Model)    
      .Name("ProductsGrid")
      .Columns(columns =>
          {
              columns.Bound(p => p.Name).ClientTemplate("<a data-PropertyName='Name' href='" + Url.Action("Edit", "Product", new { id = "#=Id#" }) + " '>#=Name#</a>");
              columns.Bound(p => p.Code).HtmlAttributes(new Dictionary<string, object> { { "data-PropertyName", "Code" } });
              columns.Bound(p => p.UnitPrice).Width(120).HtmlAttributes(new Dictionary<string, object> { { "data-PropertyName", "UnitPrice" } });
              columns.Bound(p => p.UnitsInStock).Width(150).HtmlAttributes(new Dictionary<string, object> { { "data-PropertyName", "UnitsInStock" } });
              columns.Command(command => command.Destroy());
          })
      .ToolBar(toolbar =>
          {
              toolbar.Custom().Action("Edit", "Product").Text("Create New");
              toolbar.Custom().Action("DeleteAll", "Product").Text("Delete All");
          })
      .Groupable()
      .Pageable()
      .Sortable()
      .Scrollable()
      .Selectable(selectable => selectable.Mode(GridSelectionMode.Multiple))
      .Filterable()
      .DataSource(ds => ds.Ajax()
                          .Batch(true)
                          .Read(read => read.Action("Products_Read", "Product"))
                          .Events(events => events.Error("error"))
                          .Model(model => model.Id(p => p.Id))
                          .Create(create => create.Action("Product_Create", "Product"))
                          .Destroy(destroy => destroy.Action("Product_Delete", "Product"))
                          .Update(update => update.Action("Product_Update", "Product"))))  

<br/>
<input type="button" id="refreshProductsGridData" value="Refresh Data" onclick="$('#ProductsGrid').data('kendoGrid').dataSource.read();" />
<script type="text/javascript">
    //kendo.data.DataSource.prototype.options.autoSync = true;
    $('#body').kendoValidator().data('kendoValidator');
    function error(e) {
        console.log(e.errors);
        $('#ProductsGrid').data('kendoGrid').cancelChanges();
    }
</script>